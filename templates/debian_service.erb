#! /bin/sh
### BEGIN INIT INFO
# Provides:          puppetdb_rundeck
# Required-Start:    $network $named $remote_fs $syslog
# Required-Stop:     $network $named $remote_fs $syslog
# Should-Start:      puppetdb_rundeck
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
### END INIT INFO

PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin
DAEMON=/usr/local/bin/puppetdb_rundeck
DAEMON_OPTS="--port <%= @port %> --pdbhost <%= @puppetdb_host %> --pdbport <%= @puppetdb_port %>"
NAME=puppetdb_rundeck
DESC="puppetdb_rundeck"
PIDFILE="/var/run/$NAME.pid"

test -x $DAEMON || exit 0

. /lib/lsb/init-functions

reload_puppetdb_rundeck() {
  start-stop-daemon --stop --quiet --signal HUP --pidfile $PIDFILE
}

start_puppetdb_rundeck() {
  start-stop-daemon --start --quiet --pidfile $PIDFILE -m --background --exec $DAEMON -- $DAEMON_OPTS
}

stop_puppetdb_rundeck() {
  start-stop-daemon --stop --retry TERM/10/KILL/5 --quiet --oknodo --pidfile $PIDFILE
}

status_puppetdb_rundeck() {
  if (type status_of_proc > /dev/null 2>&1) ; then
    status_of_proc -p "${PIDFILE}" "${DAEMON}" "${NAME}"
  else
    status_of_proc() {
      local pidfile daemon name status

       pidfile=
       OPTIND=1
       while getopts p: opt ; do
       case "$opt" in
         p)  pidfile="$OPTARG";;
         esac
       done
       shift $(($OPTIND - 1))

       if [ -n "$pidfile" ]; then
         pidfile="-p $pidfile"
       fi

       daemon="$1"
       name="$2"
       status="0"
       pidofproc $pidfile $daemon >/dev/null || status="$?"

       if [ "$status" = 0 ]; then
         log_success_msg "$name is running"
         return 0
       elif [ "$status" = 4 ]; then
         log_failure_msg "could not access PID file for $name"
         return $status
       else
         log_failure_msg "$name is not running"
         return $status
       fi
    }
    status_of_proc -p "${PIDFILE}" "${DAEMON}" "${NAME}"
  fi
}

case "$1" in
  start)log_begin_msg "Starting $DESC"
    start_puppetdb_rundeck
    log_end_msg $?
    ;;
  stop)
    log_begin_msg "Stopping $DESC"
    stop_puppetdb_rundeck
    log_end_msg $?
    ;;
  reload)
    log_begin_msg "Reloading $DESC"
    reload_puppetdb_rundeck
    log_end_msg $?
    ;;
  status)
    status_puppetdb_rundeck
    ;;
  restart|force-reload)
    log_begin_msg "Restarting $DESC"
    stop_puppetdb_rundeck
    start_puppetdb_rundeck
    log_end_msg $?
    ;;
  *)
    echo "Usage: $0 {start|stop|status|restart|force-reload|reload}" >&2
    exit 1
    ;;
esac